
Lab2_Embsys_Servo_v2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000042e  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00802000  00802000  00000482  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  00000482  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000044  00000000  00000000  000004b4  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000068  00000000  00000000  000004f8  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00004a2e  00000000  00000000  00000560  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000034f3  00000000  00000000  00004f8e  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000016fe  00000000  00000000  00008481  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000088  00000000  00000000  00009b80  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0003104d  00000000  00000000  00009c08  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000519  00000000  00000000  0003ac55  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000080  00000000  00000000  0003b16e  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_macro  00000bd1  00000000  00000000  0003b1ee  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	fd c0       	rjmp	.+506    	; 0x1fc <__ctors_end>
   2:	00 00       	nop
   4:	1a c1       	rjmp	.+564    	; 0x23a <__bad_interrupt>
   6:	00 00       	nop
   8:	18 c1       	rjmp	.+560    	; 0x23a <__bad_interrupt>
   a:	00 00       	nop
   c:	16 c1       	rjmp	.+556    	; 0x23a <__bad_interrupt>
   e:	00 00       	nop
  10:	14 c1       	rjmp	.+552    	; 0x23a <__bad_interrupt>
  12:	00 00       	nop
  14:	12 c1       	rjmp	.+548    	; 0x23a <__bad_interrupt>
  16:	00 00       	nop
  18:	10 c1       	rjmp	.+544    	; 0x23a <__bad_interrupt>
  1a:	00 00       	nop
  1c:	0e c1       	rjmp	.+540    	; 0x23a <__bad_interrupt>
  1e:	00 00       	nop
  20:	0c c1       	rjmp	.+536    	; 0x23a <__bad_interrupt>
  22:	00 00       	nop
  24:	0a c1       	rjmp	.+532    	; 0x23a <__bad_interrupt>
  26:	00 00       	nop
  28:	08 c1       	rjmp	.+528    	; 0x23a <__bad_interrupt>
  2a:	00 00       	nop
  2c:	06 c1       	rjmp	.+524    	; 0x23a <__bad_interrupt>
  2e:	00 00       	nop
  30:	04 c1       	rjmp	.+520    	; 0x23a <__bad_interrupt>
  32:	00 00       	nop
  34:	02 c1       	rjmp	.+516    	; 0x23a <__bad_interrupt>
  36:	00 00       	nop
  38:	00 c1       	rjmp	.+512    	; 0x23a <__bad_interrupt>
  3a:	00 00       	nop
  3c:	fe c0       	rjmp	.+508    	; 0x23a <__bad_interrupt>
  3e:	00 00       	nop
  40:	fc c0       	rjmp	.+504    	; 0x23a <__bad_interrupt>
  42:	00 00       	nop
  44:	fa c0       	rjmp	.+500    	; 0x23a <__bad_interrupt>
  46:	00 00       	nop
  48:	f8 c0       	rjmp	.+496    	; 0x23a <__bad_interrupt>
  4a:	00 00       	nop
  4c:	f6 c0       	rjmp	.+492    	; 0x23a <__bad_interrupt>
  4e:	00 00       	nop
  50:	f4 c0       	rjmp	.+488    	; 0x23a <__bad_interrupt>
  52:	00 00       	nop
  54:	f2 c0       	rjmp	.+484    	; 0x23a <__bad_interrupt>
  56:	00 00       	nop
  58:	f0 c0       	rjmp	.+480    	; 0x23a <__bad_interrupt>
  5a:	00 00       	nop
  5c:	ee c0       	rjmp	.+476    	; 0x23a <__bad_interrupt>
  5e:	00 00       	nop
  60:	ec c0       	rjmp	.+472    	; 0x23a <__bad_interrupt>
  62:	00 00       	nop
  64:	ea c0       	rjmp	.+468    	; 0x23a <__bad_interrupt>
  66:	00 00       	nop
  68:	e8 c0       	rjmp	.+464    	; 0x23a <__bad_interrupt>
  6a:	00 00       	nop
  6c:	e6 c0       	rjmp	.+460    	; 0x23a <__bad_interrupt>
  6e:	00 00       	nop
  70:	e4 c0       	rjmp	.+456    	; 0x23a <__bad_interrupt>
  72:	00 00       	nop
  74:	e2 c0       	rjmp	.+452    	; 0x23a <__bad_interrupt>
  76:	00 00       	nop
  78:	e0 c0       	rjmp	.+448    	; 0x23a <__bad_interrupt>
  7a:	00 00       	nop
  7c:	de c0       	rjmp	.+444    	; 0x23a <__bad_interrupt>
  7e:	00 00       	nop
  80:	dc c0       	rjmp	.+440    	; 0x23a <__bad_interrupt>
  82:	00 00       	nop
  84:	da c0       	rjmp	.+436    	; 0x23a <__bad_interrupt>
  86:	00 00       	nop
  88:	d8 c0       	rjmp	.+432    	; 0x23a <__bad_interrupt>
  8a:	00 00       	nop
  8c:	d6 c0       	rjmp	.+428    	; 0x23a <__bad_interrupt>
  8e:	00 00       	nop
  90:	d4 c0       	rjmp	.+424    	; 0x23a <__bad_interrupt>
  92:	00 00       	nop
  94:	d2 c0       	rjmp	.+420    	; 0x23a <__bad_interrupt>
  96:	00 00       	nop
  98:	d0 c0       	rjmp	.+416    	; 0x23a <__bad_interrupt>
  9a:	00 00       	nop
  9c:	ce c0       	rjmp	.+412    	; 0x23a <__bad_interrupt>
  9e:	00 00       	nop
  a0:	cc c0       	rjmp	.+408    	; 0x23a <__bad_interrupt>
  a2:	00 00       	nop
  a4:	ca c0       	rjmp	.+404    	; 0x23a <__bad_interrupt>
  a6:	00 00       	nop
  a8:	c8 c0       	rjmp	.+400    	; 0x23a <__bad_interrupt>
  aa:	00 00       	nop
  ac:	c6 c0       	rjmp	.+396    	; 0x23a <__bad_interrupt>
  ae:	00 00       	nop
  b0:	c4 c0       	rjmp	.+392    	; 0x23a <__bad_interrupt>
  b2:	00 00       	nop
  b4:	c2 c0       	rjmp	.+388    	; 0x23a <__bad_interrupt>
  b6:	00 00       	nop
  b8:	c0 c0       	rjmp	.+384    	; 0x23a <__bad_interrupt>
  ba:	00 00       	nop
  bc:	be c0       	rjmp	.+380    	; 0x23a <__bad_interrupt>
  be:	00 00       	nop
  c0:	bc c0       	rjmp	.+376    	; 0x23a <__bad_interrupt>
  c2:	00 00       	nop
  c4:	ba c0       	rjmp	.+372    	; 0x23a <__bad_interrupt>
  c6:	00 00       	nop
  c8:	b8 c0       	rjmp	.+368    	; 0x23a <__bad_interrupt>
  ca:	00 00       	nop
  cc:	b6 c0       	rjmp	.+364    	; 0x23a <__bad_interrupt>
  ce:	00 00       	nop
  d0:	b4 c0       	rjmp	.+360    	; 0x23a <__bad_interrupt>
  d2:	00 00       	nop
  d4:	b2 c0       	rjmp	.+356    	; 0x23a <__bad_interrupt>
  d6:	00 00       	nop
  d8:	b0 c0       	rjmp	.+352    	; 0x23a <__bad_interrupt>
  da:	00 00       	nop
  dc:	ae c0       	rjmp	.+348    	; 0x23a <__bad_interrupt>
  de:	00 00       	nop
  e0:	ac c0       	rjmp	.+344    	; 0x23a <__bad_interrupt>
  e2:	00 00       	nop
  e4:	aa c0       	rjmp	.+340    	; 0x23a <__bad_interrupt>
  e6:	00 00       	nop
  e8:	a8 c0       	rjmp	.+336    	; 0x23a <__bad_interrupt>
  ea:	00 00       	nop
  ec:	a6 c0       	rjmp	.+332    	; 0x23a <__bad_interrupt>
  ee:	00 00       	nop
  f0:	a4 c0       	rjmp	.+328    	; 0x23a <__bad_interrupt>
  f2:	00 00       	nop
  f4:	a2 c0       	rjmp	.+324    	; 0x23a <__bad_interrupt>
  f6:	00 00       	nop
  f8:	a0 c0       	rjmp	.+320    	; 0x23a <__bad_interrupt>
  fa:	00 00       	nop
  fc:	9e c0       	rjmp	.+316    	; 0x23a <__bad_interrupt>
  fe:	00 00       	nop
 100:	9c c0       	rjmp	.+312    	; 0x23a <__bad_interrupt>
 102:	00 00       	nop
 104:	9a c0       	rjmp	.+308    	; 0x23a <__bad_interrupt>
 106:	00 00       	nop
 108:	98 c0       	rjmp	.+304    	; 0x23a <__bad_interrupt>
 10a:	00 00       	nop
 10c:	96 c0       	rjmp	.+300    	; 0x23a <__bad_interrupt>
 10e:	00 00       	nop
 110:	94 c0       	rjmp	.+296    	; 0x23a <__bad_interrupt>
 112:	00 00       	nop
 114:	92 c0       	rjmp	.+292    	; 0x23a <__bad_interrupt>
 116:	00 00       	nop
 118:	90 c0       	rjmp	.+288    	; 0x23a <__bad_interrupt>
 11a:	00 00       	nop
 11c:	8e c0       	rjmp	.+284    	; 0x23a <__bad_interrupt>
 11e:	00 00       	nop
 120:	8c c0       	rjmp	.+280    	; 0x23a <__bad_interrupt>
 122:	00 00       	nop
 124:	8a c0       	rjmp	.+276    	; 0x23a <__bad_interrupt>
 126:	00 00       	nop
 128:	88 c0       	rjmp	.+272    	; 0x23a <__bad_interrupt>
 12a:	00 00       	nop
 12c:	86 c0       	rjmp	.+268    	; 0x23a <__bad_interrupt>
 12e:	00 00       	nop
 130:	84 c0       	rjmp	.+264    	; 0x23a <__bad_interrupt>
 132:	00 00       	nop
 134:	82 c0       	rjmp	.+260    	; 0x23a <__bad_interrupt>
 136:	00 00       	nop
 138:	80 c0       	rjmp	.+256    	; 0x23a <__bad_interrupt>
 13a:	00 00       	nop
 13c:	7e c0       	rjmp	.+252    	; 0x23a <__bad_interrupt>
 13e:	00 00       	nop
 140:	7c c0       	rjmp	.+248    	; 0x23a <__bad_interrupt>
 142:	00 00       	nop
 144:	7a c0       	rjmp	.+244    	; 0x23a <__bad_interrupt>
 146:	00 00       	nop
 148:	78 c0       	rjmp	.+240    	; 0x23a <__bad_interrupt>
 14a:	00 00       	nop
 14c:	76 c0       	rjmp	.+236    	; 0x23a <__bad_interrupt>
 14e:	00 00       	nop
 150:	74 c0       	rjmp	.+232    	; 0x23a <__bad_interrupt>
 152:	00 00       	nop
 154:	72 c0       	rjmp	.+228    	; 0x23a <__bad_interrupt>
 156:	00 00       	nop
 158:	70 c0       	rjmp	.+224    	; 0x23a <__bad_interrupt>
 15a:	00 00       	nop
 15c:	6e c0       	rjmp	.+220    	; 0x23a <__bad_interrupt>
 15e:	00 00       	nop
 160:	6c c0       	rjmp	.+216    	; 0x23a <__bad_interrupt>
 162:	00 00       	nop
 164:	6a c0       	rjmp	.+212    	; 0x23a <__bad_interrupt>
 166:	00 00       	nop
 168:	68 c0       	rjmp	.+208    	; 0x23a <__bad_interrupt>
 16a:	00 00       	nop
 16c:	66 c0       	rjmp	.+204    	; 0x23a <__bad_interrupt>
 16e:	00 00       	nop
 170:	64 c0       	rjmp	.+200    	; 0x23a <__bad_interrupt>
 172:	00 00       	nop
 174:	62 c0       	rjmp	.+196    	; 0x23a <__bad_interrupt>
 176:	00 00       	nop
 178:	60 c0       	rjmp	.+192    	; 0x23a <__bad_interrupt>
 17a:	00 00       	nop
 17c:	5e c0       	rjmp	.+188    	; 0x23a <__bad_interrupt>
 17e:	00 00       	nop
 180:	5c c0       	rjmp	.+184    	; 0x23a <__bad_interrupt>
 182:	00 00       	nop
 184:	5a c0       	rjmp	.+180    	; 0x23a <__bad_interrupt>
 186:	00 00       	nop
 188:	58 c0       	rjmp	.+176    	; 0x23a <__bad_interrupt>
 18a:	00 00       	nop
 18c:	56 c0       	rjmp	.+172    	; 0x23a <__bad_interrupt>
 18e:	00 00       	nop
 190:	54 c0       	rjmp	.+168    	; 0x23a <__bad_interrupt>
 192:	00 00       	nop
 194:	52 c0       	rjmp	.+164    	; 0x23a <__bad_interrupt>
 196:	00 00       	nop
 198:	50 c0       	rjmp	.+160    	; 0x23a <__bad_interrupt>
 19a:	00 00       	nop
 19c:	4e c0       	rjmp	.+156    	; 0x23a <__bad_interrupt>
 19e:	00 00       	nop
 1a0:	4c c0       	rjmp	.+152    	; 0x23a <__bad_interrupt>
 1a2:	00 00       	nop
 1a4:	4a c0       	rjmp	.+148    	; 0x23a <__bad_interrupt>
 1a6:	00 00       	nop
 1a8:	48 c0       	rjmp	.+144    	; 0x23a <__bad_interrupt>
 1aa:	00 00       	nop
 1ac:	46 c0       	rjmp	.+140    	; 0x23a <__bad_interrupt>
 1ae:	00 00       	nop
 1b0:	44 c0       	rjmp	.+136    	; 0x23a <__bad_interrupt>
 1b2:	00 00       	nop
 1b4:	42 c0       	rjmp	.+132    	; 0x23a <__bad_interrupt>
 1b6:	00 00       	nop
 1b8:	40 c0       	rjmp	.+128    	; 0x23a <__bad_interrupt>
 1ba:	00 00       	nop
 1bc:	3e c0       	rjmp	.+124    	; 0x23a <__bad_interrupt>
 1be:	00 00       	nop
 1c0:	3c c0       	rjmp	.+120    	; 0x23a <__bad_interrupt>
 1c2:	00 00       	nop
 1c4:	3a c0       	rjmp	.+116    	; 0x23a <__bad_interrupt>
 1c6:	00 00       	nop
 1c8:	38 c0       	rjmp	.+112    	; 0x23a <__bad_interrupt>
 1ca:	00 00       	nop
 1cc:	36 c0       	rjmp	.+108    	; 0x23a <__bad_interrupt>
 1ce:	00 00       	nop
 1d0:	34 c0       	rjmp	.+104    	; 0x23a <__bad_interrupt>
 1d2:	00 00       	nop
 1d4:	32 c0       	rjmp	.+100    	; 0x23a <__bad_interrupt>
 1d6:	00 00       	nop
 1d8:	30 c0       	rjmp	.+96     	; 0x23a <__bad_interrupt>
 1da:	00 00       	nop
 1dc:	2e c0       	rjmp	.+92     	; 0x23a <__bad_interrupt>
 1de:	00 00       	nop
 1e0:	2c c0       	rjmp	.+88     	; 0x23a <__bad_interrupt>
 1e2:	00 00       	nop
 1e4:	2a c0       	rjmp	.+84     	; 0x23a <__bad_interrupt>
 1e6:	00 00       	nop
 1e8:	28 c0       	rjmp	.+80     	; 0x23a <__bad_interrupt>
 1ea:	00 00       	nop
 1ec:	26 c0       	rjmp	.+76     	; 0x23a <__bad_interrupt>
 1ee:	00 00       	nop
 1f0:	24 c0       	rjmp	.+72     	; 0x23a <__bad_interrupt>
 1f2:	00 00       	nop
 1f4:	22 c0       	rjmp	.+68     	; 0x23a <__bad_interrupt>
 1f6:	00 00       	nop
 1f8:	20 c0       	rjmp	.+64     	; 0x23a <__bad_interrupt>
	...

000001fc <__ctors_end>:
 1fc:	11 24       	eor	r1, r1
 1fe:	1f be       	out	0x3f, r1	; 63
 200:	cf ef       	ldi	r28, 0xFF	; 255
 202:	cd bf       	out	0x3d, r28	; 61
 204:	df e5       	ldi	r29, 0x5F	; 95
 206:	de bf       	out	0x3e, r29	; 62
 208:	00 e0       	ldi	r16, 0x00	; 0
 20a:	0c bf       	out	0x3c, r16	; 60

0000020c <__do_copy_data>:
 20c:	10 e2       	ldi	r17, 0x20	; 32
 20e:	a0 e0       	ldi	r26, 0x00	; 0
 210:	b0 e2       	ldi	r27, 0x20	; 32
 212:	ee e2       	ldi	r30, 0x2E	; 46
 214:	f4 e0       	ldi	r31, 0x04	; 4
 216:	00 e0       	ldi	r16, 0x00	; 0
 218:	0b bf       	out	0x3b, r16	; 59
 21a:	02 c0       	rjmp	.+4      	; 0x220 <__do_copy_data+0x14>
 21c:	07 90       	elpm	r0, Z+
 21e:	0d 92       	st	X+, r0
 220:	a0 30       	cpi	r26, 0x00	; 0
 222:	b1 07       	cpc	r27, r17
 224:	d9 f7       	brne	.-10     	; 0x21c <__do_copy_data+0x10>

00000226 <__do_clear_bss>:
 226:	20 e2       	ldi	r18, 0x20	; 32
 228:	a0 e0       	ldi	r26, 0x00	; 0
 22a:	b0 e2       	ldi	r27, 0x20	; 32
 22c:	01 c0       	rjmp	.+2      	; 0x230 <.do_clear_bss_start>

0000022e <.do_clear_bss_loop>:
 22e:	1d 92       	st	X+, r1

00000230 <.do_clear_bss_start>:
 230:	a0 30       	cpi	r26, 0x00	; 0
 232:	b2 07       	cpc	r27, r18
 234:	e1 f7       	brne	.-8      	; 0x22e <.do_clear_bss_loop>
 236:	da d0       	rcall	.+436    	; 0x3ec <main>
 238:	f8 c0       	rjmp	.+496    	; 0x42a <_exit>

0000023a <__bad_interrupt>:
 23a:	e2 ce       	rjmp	.-572    	; 0x0 <__vectors>

0000023c <ioport_configure_port_pin>:
#include "ioport_compat.h"

#if defined(IOPORT_XMEGA_COMPAT)
void ioport_configure_port_pin(void *port, pin_mask_t pin_mask,
		port_pin_flags_t flags)
{
 23c:	cf 93       	push	r28
 23e:	df 93       	push	r29
 240:	fc 01       	movw	r30, r24
	uint8_t pin;

	for (pin = 0; pin < 8; pin++) {
		if (pin_mask & (1 << pin)) {
			*((uint8_t *)port + PORT_PIN0CTRL + pin) = flags >> 8;
 242:	20 e0       	ldi	r18, 0x00	; 0
 244:	30 e0       	ldi	r19, 0x00	; 0
		port_pin_flags_t flags)
{
	uint8_t pin;

	for (pin = 0; pin < 8; pin++) {
		if (pin_mask & (1 << pin)) {
 246:	c6 2f       	mov	r28, r22
 248:	d0 e0       	ldi	r29, 0x00	; 0
 24a:	de 01       	movw	r26, r28
 24c:	02 2e       	mov	r0, r18
 24e:	02 c0       	rjmp	.+4      	; 0x254 <ioport_configure_port_pin+0x18>
 250:	b5 95       	asr	r27
 252:	a7 95       	ror	r26
 254:	0a 94       	dec	r0
 256:	e2 f7       	brpl	.-8      	; 0x250 <ioport_configure_port_pin+0x14>
 258:	a0 fd       	sbrc	r26, 0
			*((uint8_t *)port + PORT_PIN0CTRL + pin) = flags >> 8;
 25a:	50 8b       	std	Z+16, r21	; 0x10
 25c:	2f 5f       	subi	r18, 0xFF	; 255
 25e:	3f 4f       	sbci	r19, 0xFF	; 255
 260:	31 96       	adiw	r30, 0x01	; 1
void ioport_configure_port_pin(void *port, pin_mask_t pin_mask,
		port_pin_flags_t flags)
{
	uint8_t pin;

	for (pin = 0; pin < 8; pin++) {
 262:	28 30       	cpi	r18, 0x08	; 8
 264:	31 05       	cpc	r19, r1
 266:	89 f7       	brne	.-30     	; 0x24a <ioport_configure_port_pin+0xe>
		if (pin_mask & (1 << pin)) {
			*((uint8_t *)port + PORT_PIN0CTRL + pin) = flags >> 8;
		}
	}
	/* Select direction and initial pin state */
	if (flags & IOPORT_DIR_OUTPUT) {
 268:	40 ff       	sbrs	r20, 0
 26a:	0a c0       	rjmp	.+20     	; 0x280 <ioport_configure_port_pin+0x44>
		if (flags & IOPORT_INIT_HIGH) {
 26c:	41 ff       	sbrs	r20, 1
 26e:	03 c0       	rjmp	.+6      	; 0x276 <ioport_configure_port_pin+0x3a>
			*((uint8_t *)port + PORT_OUTSET) = pin_mask;
 270:	fc 01       	movw	r30, r24
 272:	65 83       	std	Z+5, r22	; 0x05
 274:	02 c0       	rjmp	.+4      	; 0x27a <ioport_configure_port_pin+0x3e>
		} else {
			*((uint8_t *)port + PORT_OUTCLR) = pin_mask;
 276:	fc 01       	movw	r30, r24
 278:	66 83       	std	Z+6, r22	; 0x06
		}

		*((uint8_t *)port + PORT_DIRSET) = pin_mask;
 27a:	fc 01       	movw	r30, r24
 27c:	61 83       	std	Z+1, r22	; 0x01
 27e:	02 c0       	rjmp	.+4      	; 0x284 <ioport_configure_port_pin+0x48>
	} else {
		*((uint8_t *)port + PORT_DIRCLR) = pin_mask;
 280:	fc 01       	movw	r30, r24
 282:	62 83       	std	Z+2, r22	; 0x02
	}
}
 284:	df 91       	pop	r29
 286:	cf 91       	pop	r28
 288:	08 95       	ret

0000028a <board_init>:
 * \param flags Bitmask of flags specifying additional configuration
 * parameters.
 */
static inline void ioport_configure_pin(port_pin_t pin, port_pin_flags_t flags)
{
	ioport_configure_port_pin(arch_ioport_pin_to_base(pin),
 28a:	43 e0       	ldi	r20, 0x03	; 3
 28c:	50 e0       	ldi	r21, 0x00	; 0
 28e:	61 e0       	ldi	r22, 0x01	; 1
 290:	80 ee       	ldi	r24, 0xE0	; 224
 292:	97 e0       	ldi	r25, 0x07	; 7
 294:	d3 df       	rcall	.-90     	; 0x23c <ioport_configure_port_pin>
 296:	43 e0       	ldi	r20, 0x03	; 3
 298:	50 e0       	ldi	r21, 0x00	; 0
 29a:	62 e0       	ldi	r22, 0x02	; 2
 29c:	80 ee       	ldi	r24, 0xE0	; 224
 29e:	97 e0       	ldi	r25, 0x07	; 7
 2a0:	cd df       	rcall	.-102    	; 0x23c <ioport_configure_port_pin>
 2a2:	43 e0       	ldi	r20, 0x03	; 3
 2a4:	50 e0       	ldi	r21, 0x00	; 0
 2a6:	60 e1       	ldi	r22, 0x10	; 16
 2a8:	80 e6       	ldi	r24, 0x60	; 96
 2aa:	96 e0       	ldi	r25, 0x06	; 6
 2ac:	c7 df       	rcall	.-114    	; 0x23c <ioport_configure_port_pin>
 2ae:	41 e0       	ldi	r20, 0x01	; 1
 2b0:	50 e4       	ldi	r21, 0x40	; 64
 2b2:	60 e2       	ldi	r22, 0x20	; 32
 2b4:	80 e6       	ldi	r24, 0x60	; 96
 2b6:	96 e0       	ldi	r25, 0x06	; 6
 2b8:	c1 df       	rcall	.-126    	; 0x23c <ioport_configure_port_pin>
 2ba:	40 e0       	ldi	r20, 0x00	; 0
 2bc:	5b e1       	ldi	r21, 0x1B	; 27
 2be:	60 e2       	ldi	r22, 0x20	; 32
 2c0:	80 e8       	ldi	r24, 0x80	; 128
 2c2:	96 e0       	ldi	r25, 0x06	; 6
 2c4:	bb df       	rcall	.-138    	; 0x23c <ioport_configure_port_pin>
 2c6:	40 e0       	ldi	r20, 0x00	; 0
 2c8:	5b e1       	ldi	r21, 0x1B	; 27
 2ca:	62 e0       	ldi	r22, 0x02	; 2
 2cc:	80 ea       	ldi	r24, 0xA0	; 160
 2ce:	96 e0       	ldi	r25, 0x06	; 6
 2d0:	b5 df       	rcall	.-150    	; 0x23c <ioport_configure_port_pin>
 2d2:	40 e0       	ldi	r20, 0x00	; 0
 2d4:	5b e1       	ldi	r21, 0x1B	; 27
 2d6:	64 e0       	ldi	r22, 0x04	; 4
 2d8:	80 ea       	ldi	r24, 0xA0	; 160
 2da:	96 e0       	ldi	r25, 0x06	; 6
 2dc:	af df       	rcall	.-162    	; 0x23c <ioport_configure_port_pin>
 2de:	43 e0       	ldi	r20, 0x03	; 3
 2e0:	50 e0       	ldi	r21, 0x00	; 0
 2e2:	62 e0       	ldi	r22, 0x02	; 2
 2e4:	80 e6       	ldi	r24, 0x60	; 96
 2e6:	96 e0       	ldi	r25, 0x06	; 6
 2e8:	a9 df       	rcall	.-174    	; 0x23c <ioport_configure_port_pin>
 2ea:	43 e0       	ldi	r20, 0x03	; 3
 2ec:	50 e0       	ldi	r21, 0x00	; 0
 2ee:	68 e0       	ldi	r22, 0x08	; 8
 2f0:	80 e6       	ldi	r24, 0x60	; 96
 2f2:	96 e0       	ldi	r25, 0x06	; 6
 2f4:	a3 df       	rcall	.-186    	; 0x23c <ioport_configure_port_pin>
 2f6:	43 e0       	ldi	r20, 0x03	; 3
 2f8:	50 e0       	ldi	r21, 0x00	; 0
 2fa:	68 e0       	ldi	r22, 0x08	; 8
 2fc:	80 ea       	ldi	r24, 0xA0	; 160
 2fe:	96 e0       	ldi	r25, 0x06	; 6
 300:	9d df       	rcall	.-198    	; 0x23c <ioport_configure_port_pin>
 302:	43 e0       	ldi	r20, 0x03	; 3
 304:	50 e0       	ldi	r21, 0x00	; 0
 306:	61 e0       	ldi	r22, 0x01	; 1
 308:	80 e6       	ldi	r24, 0x60	; 96
 30a:	96 e0       	ldi	r25, 0x06	; 6
 30c:	97 df       	rcall	.-210    	; 0x23c <ioport_configure_port_pin>
 30e:	43 e0       	ldi	r20, 0x03	; 3
 310:	50 e0       	ldi	r21, 0x00	; 0
 312:	68 e0       	ldi	r22, 0x08	; 8
 314:	80 e0       	ldi	r24, 0x00	; 0
 316:	96 e0       	ldi	r25, 0x06	; 6
 318:	91 df       	rcall	.-222    	; 0x23c <ioport_configure_port_pin>
 31a:	41 e0       	ldi	r20, 0x01	; 1
 31c:	50 e0       	ldi	r21, 0x00	; 0
 31e:	60 e1       	ldi	r22, 0x10	; 16
 320:	80 e8       	ldi	r24, 0x80	; 128
 322:	96 e0       	ldi	r25, 0x06	; 6
 324:	8b df       	rcall	.-234    	; 0x23c <ioport_configure_port_pin>
 326:	43 e0       	ldi	r20, 0x03	; 3
 328:	50 e0       	ldi	r21, 0x00	; 0
 32a:	62 e0       	ldi	r22, 0x02	; 2
 32c:	80 e6       	ldi	r24, 0x60	; 96
 32e:	96 e0       	ldi	r25, 0x06	; 6
 330:	85 df       	rcall	.-246    	; 0x23c <ioport_configure_port_pin>
 332:	43 e0       	ldi	r20, 0x03	; 3
 334:	50 e0       	ldi	r21, 0x00	; 0
 336:	68 e0       	ldi	r22, 0x08	; 8
 338:	80 e6       	ldi	r24, 0x60	; 96
 33a:	96 e0       	ldi	r25, 0x06	; 6
 33c:	7f df       	rcall	.-258    	; 0x23c <ioport_configure_port_pin>
 33e:	40 e0       	ldi	r20, 0x00	; 0
 340:	50 e0       	ldi	r21, 0x00	; 0
 342:	64 e0       	ldi	r22, 0x04	; 4
 344:	80 e6       	ldi	r24, 0x60	; 96
 346:	96 e0       	ldi	r25, 0x06	; 6
 348:	79 df       	rcall	.-270    	; 0x23c <ioport_configure_port_pin>
 34a:	43 e0       	ldi	r20, 0x03	; 3
 34c:	50 e0       	ldi	r21, 0x00	; 0
 34e:	60 e1       	ldi	r22, 0x10	; 16
 350:	80 ea       	ldi	r24, 0xA0	; 160
 352:	96 e0       	ldi	r25, 0x06	; 6
 354:	73 df       	rcall	.-282    	; 0x23c <ioport_configure_port_pin>
 356:	40 e0       	ldi	r20, 0x00	; 0
 358:	50 e0       	ldi	r21, 0x00	; 0
 35a:	61 e0       	ldi	r22, 0x01	; 1
 35c:	80 e0       	ldi	r24, 0x00	; 0
 35e:	96 e0       	ldi	r25, 0x06	; 6
 360:	6d df       	rcall	.-294    	; 0x23c <ioport_configure_port_pin>
 362:	40 e0       	ldi	r20, 0x00	; 0
 364:	50 e0       	ldi	r21, 0x00	; 0
 366:	64 e0       	ldi	r22, 0x04	; 4
 368:	80 e0       	ldi	r24, 0x00	; 0
 36a:	96 e0       	ldi	r25, 0x06	; 6
 36c:	67 df       	rcall	.-306    	; 0x23c <ioport_configure_port_pin>
 36e:	40 e0       	ldi	r20, 0x00	; 0
 370:	50 e0       	ldi	r21, 0x00	; 0
 372:	62 e0       	ldi	r22, 0x02	; 2
 374:	80 e2       	ldi	r24, 0x20	; 32
 376:	96 e0       	ldi	r25, 0x06	; 6
 378:	61 df       	rcall	.-318    	; 0x23c <ioport_configure_port_pin>
 37a:	43 e0       	ldi	r20, 0x03	; 3
 37c:	50 e0       	ldi	r21, 0x00	; 0
 37e:	68 e0       	ldi	r22, 0x08	; 8
 380:	80 e4       	ldi	r24, 0x40	; 64
 382:	96 e0       	ldi	r25, 0x06	; 6
 384:	5b df       	rcall	.-330    	; 0x23c <ioport_configure_port_pin>
 386:	40 e0       	ldi	r20, 0x00	; 0
 388:	50 e0       	ldi	r21, 0x00	; 0
 38a:	64 e0       	ldi	r22, 0x04	; 4
 38c:	80 e4       	ldi	r24, 0x40	; 64
 38e:	96 e0       	ldi	r25, 0x06	; 6
 390:	55 df       	rcall	.-342    	; 0x23c <ioport_configure_port_pin>
 392:	43 e0       	ldi	r20, 0x03	; 3
 394:	50 e0       	ldi	r21, 0x00	; 0
 396:	68 e0       	ldi	r22, 0x08	; 8
 398:	80 e6       	ldi	r24, 0x60	; 96
 39a:	96 e0       	ldi	r25, 0x06	; 6
 39c:	4f df       	rcall	.-354    	; 0x23c <ioport_configure_port_pin>
 39e:	40 e0       	ldi	r20, 0x00	; 0
 3a0:	50 e0       	ldi	r21, 0x00	; 0
 3a2:	64 e0       	ldi	r22, 0x04	; 4
 3a4:	80 e6       	ldi	r24, 0x60	; 96
 3a6:	96 e0       	ldi	r25, 0x06	; 6
 3a8:	49 df       	rcall	.-366    	; 0x23c <ioport_configure_port_pin>
 3aa:	43 e0       	ldi	r20, 0x03	; 3
 3ac:	50 e0       	ldi	r21, 0x00	; 0
 3ae:	68 e0       	ldi	r22, 0x08	; 8
 3b0:	80 e8       	ldi	r24, 0x80	; 128
 3b2:	96 e0       	ldi	r25, 0x06	; 6
 3b4:	43 df       	rcall	.-378    	; 0x23c <ioport_configure_port_pin>
 3b6:	40 e0       	ldi	r20, 0x00	; 0
 3b8:	50 e0       	ldi	r21, 0x00	; 0
 3ba:	64 e0       	ldi	r22, 0x04	; 4
 3bc:	80 e8       	ldi	r24, 0x80	; 128
 3be:	96 e0       	ldi	r25, 0x06	; 6
 3c0:	3d cf       	rjmp	.-390    	; 0x23c <ioport_configure_port_pin>
 3c2:	08 95       	ret

000003c4 <PWM_Init>:
#include <board.h>

void PWM_Init(void)
{
	/* Set output */
	PORTC.DIR |= PIN0_bm;
 3c4:	e0 e4       	ldi	r30, 0x40	; 64
 3c6:	f6 e0       	ldi	r31, 0x06	; 6
 3c8:	80 81       	ld	r24, Z
 3ca:	81 60       	ori	r24, 0x01	; 1
 3cc:	80 83       	st	Z, r24

	/* Set Register */
	TCC0.CTRLA = (PIN2_bm) | (PIN0_bm);
 3ce:	e0 e0       	ldi	r30, 0x00	; 0
 3d0:	f8 e0       	ldi	r31, 0x08	; 8
 3d2:	85 e0       	ldi	r24, 0x05	; 5
 3d4:	80 83       	st	Z, r24
	TCC0.CTRLB = (PIN4_bm) | (PIN2_bm) | (PIN1_bm);
 3d6:	86 e1       	ldi	r24, 0x16	; 22
 3d8:	81 83       	std	Z+1, r24	; 0x01
	
	/* Set Period */
	TCC0.PER = 16000;
 3da:	80 e8       	ldi	r24, 0x80	; 128
 3dc:	9e e3       	ldi	r25, 0x3E	; 62
 3de:	86 a3       	std	Z+38, r24	; 0x26
 3e0:	97 a3       	std	Z+39, r25	; 0x27

	/* Set Compare Register value*/
	TCC0.CCA = 1500;
 3e2:	8c ed       	ldi	r24, 0xDC	; 220
 3e4:	95 e0       	ldi	r25, 0x05	; 5
 3e6:	80 a7       	std	Z+40, r24	; 0x28
 3e8:	91 a7       	std	Z+41, r25	; 0x29
 3ea:	08 95       	ret

000003ec <main>:

int main (void)
{
	/* Insert system clock initialization code here (sysclk_init()). */

	board_init();
 3ec:	4e df       	rcall	.-356    	; 0x28a <board_init>
	PWM_Init();
 3ee:	ea df       	rcall	.-44     	; 0x3c4 <PWM_Init>
 3f0:	c0 e8       	ldi	r28, 0x80	; 128

__always_inline static bool arch_ioport_get_pin_level(ioport_pin_t pin)
{
	PORT_t *base = arch_ioport_pin_to_base(pin);

	return base->IN & arch_ioport_pin_to_mask(pin);
 3f2:	d6 e0       	ldi	r29, 0x06	; 6
 3f4:	e0 ee       	ldi	r30, 0xE0	; 224
		bool level)
{
	PORT_t *base = arch_ioport_pin_to_base(pin);

	if (level) {
		base->OUTSET = arch_ioport_pin_to_mask(pin);
 3f6:	f7 e0       	ldi	r31, 0x07	; 7
 3f8:	21 e0       	ldi	r18, 0x01	; 1
 3fa:	92 e0       	ldi	r25, 0x02	; 2
	} else {
		base->OUTCLR = arch_ioport_pin_to_mask(pin);
 3fc:	a0 e0       	ldi	r26, 0x00	; 0
			ioport_set_pin_high(LED1_GPIO); // Button pressed
			TCC0.CCA = 1;
			}else{
			ioport_set_pin_high(IOPORT_PIN_LED); // Button released
			ioport_set_pin_low(LED1_GPIO);
			TCC0.CCA = 8000;
 3fe:	b8 e0       	ldi	r27, 0x08	; 8
 400:	60 e4       	ldi	r22, 0x40	; 64
 402:	7f e1       	ldi	r23, 0x1F	; 31
 404:	41 e0       	ldi	r20, 0x01	; 1
	{
		
		if (ioport_pin_is_low(IOPORT_PIN_BTN)) {
			ioport_set_pin_low(IOPORT_PIN_LED);
			ioport_set_pin_high(LED1_GPIO); // Button pressed
			TCC0.CCA = 1;
 406:	50 e0       	ldi	r21, 0x00	; 0
 408:	88 85       	ldd	r24, Y+8	; 0x08

__always_inline static bool arch_ioport_get_pin_level(ioport_pin_t pin)
{
	PORT_t *base = arch_ioport_pin_to_base(pin);

	return base->IN & arch_ioport_pin_to_mask(pin);
 40a:	85 fd       	sbrc	r24, 5
	#define IOPORT_PIN_LED LED0_GPIO
	#define IOPORT_PIN_BTN GPIO_PUSH_BUTTON_0
	while(1)
	{
		
		if (ioport_pin_is_low(IOPORT_PIN_BTN)) {
 40c:	07 c0       	rjmp	.+14     	; 0x41c <__LOCK_REGION_LENGTH__+0x1c>
 40e:	26 83       	std	Z+6, r18	; 0x06
	PORT_t *base = arch_ioport_pin_to_base(pin);

	if (level) {
		base->OUTSET = arch_ioport_pin_to_mask(pin);
	} else {
		base->OUTCLR = arch_ioport_pin_to_mask(pin);
 410:	95 83       	std	Z+5, r25	; 0x05
		bool level)
{
	PORT_t *base = arch_ioport_pin_to_base(pin);

	if (level) {
		base->OUTSET = arch_ioport_pin_to_mask(pin);
 412:	98 96       	adiw	r26, 0x28	; 40
			ioport_set_pin_low(IOPORT_PIN_LED);
			ioport_set_pin_high(LED1_GPIO); // Button pressed
			TCC0.CCA = 1;
 414:	4d 93       	st	X+, r20
 416:	5c 93       	st	X, r21
 418:	99 97       	sbiw	r26, 0x29	; 41
 41a:	f6 cf       	rjmp	.-20     	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
 41c:	25 83       	std	Z+5, r18	; 0x05
 41e:	96 83       	std	Z+6, r25	; 0x06
	} else {
		base->OUTCLR = arch_ioport_pin_to_mask(pin);
 420:	98 96       	adiw	r26, 0x28	; 40
			}else{
			ioport_set_pin_high(IOPORT_PIN_LED); // Button released
			ioport_set_pin_low(LED1_GPIO);
			TCC0.CCA = 8000;
 422:	6d 93       	st	X+, r22
 424:	7c 93       	st	X, r23
 426:	99 97       	sbiw	r26, 0x29	; 41
 428:	ef cf       	rjmp	.-34     	; 0x408 <__LOCK_REGION_LENGTH__+0x8>

0000042a <_exit>:
 42a:	f8 94       	cli

0000042c <__stop_program>:
 42c:	ff cf       	rjmp	.-2      	; 0x42c <__stop_program>
